<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
            xmlns:beans="http://www.springframework.org/schema/beans"
            xmlns="http://www.springframework.org/schema/security"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://www.springframework.org/schema/beans
                                http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                                http://www.springframework.org/schema/security
                                http://www.springframework.org/schema/security/spring-security.xsd">

    <!-- 如自定义登录页面必须将权限需求设为空，否则将会出现死循环 -->
    <http pattern="/login.jsp" security="none"/>
    <!--
        1、access-denied-page：权限不足时跳转页面（ref属性可以设置跳转action）
        2、use-expressions="true"：开启表达式（推荐），开启后非java为文件写法为：hasRole('ROLE_USER')
    -->
    <http use-expressions="true" access-denied-page="login.jsp">
        <!--过滤地址
            pattern：路径
            access：权限
        -->
        <intercept-url pattern="/**" access="hasRole('ROLE_USER')"/>
        <!-- 登录配置
            1.login-processing-url:登录form中action的地址(默认

为/j_spring_security_check)
            2.username-parameter:登录form中用户名的username(默认为/j_username)
            3.password-parameter:登录form中用户名的password(默认为/j_password)
            4.login-page:登录页(将覆盖默认登录页)
            5.default-target-url:默认登录后跳转的页面(如果登录前没有指定跳转页

面将生效)
            6.authentication-failure-url:错误页
            7.always-use-default-target="true":登录后强制跳转到5所指定的页面

-->
        <form-login login-processing-url="/login.jsp"
                    username-parameter="userId"
                    password-parameter="password"
                    login-page="login.jsp"
                    default-target-url="admin-index.jsp"
                    authentication-failure-url="login.jsp?error=true"
                    always-use-default-target="true"/>
        <!-- 注销配置1、logout-success-url：注销后跳转页面 -->
        <logout logout-success-url="login.jsp?logout=true"/>
    </http>
    <!-- 使用jsr250注解保护方法 -->
    <global-method-security jsr250-annotations="enabled"/>
    <authentication-manager>
        <!-- 手动配置权限列表。
       PS: 1.实体bean必须实现 UserDetails接口，否则无法转换成正确类型
           2.myUserDetailService该bean必须实现UserDetailsService接口并写好对应

方法返回UserDetails类型-->
        <authentication-provider user-service-ref='userService' />
    </authentication-manager>
</beans:beans>
